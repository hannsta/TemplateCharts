{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\schro\\\\Documents\\\\TemplateReports\\\\YFIntegration\\\\frontend\\\\src\\\\Data.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, setState } from 'react';\nimport APIConfig from './APIConfig';\nimport Cookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Data(props) {\n  _s();\n\n  const [userData, setUserData] = useState('');\n  const [selectedOption, setSelectedOption] = useState('');\n  useEffect(() => {\n    fetch('get_user_data').then(response => response.json()).then(data => setUserData(data));\n  }, []);\n  let datasets = [];\n\n  if (userData) {\n    for (const dataset of userData) {\n      let dset = /*#__PURE__*/_jsxDEV(Datasource, {\n        dataset: dataset,\n        selectDataset: selectDataset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 24\n      }, this);\n\n      datasets.push(dset);\n    }\n  }\n\n  function selectDataset(e) {}\n\n  function csvFile(e) {\n    e.preventDefault();\n    const input = document.getElementById(\"csvFile\").files[0];\n    var fileName = document.getElementById(\"csvFile\").value.split('/').pop().split('\\\\').pop();\n    const reader = new FileReader();\n    const delimiter = \",\";\n\n    reader.onload = function (e) {\n      let rawCSV = e.target.result;\n      var csrftoken = Cookies.get('csrftoken');\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': csrftoken\n        },\n        body: JSON.stringify({\n          name: fileName,\n          data: rawCSV\n        })\n      };\n      fetch('upload_data', requestOptions).then(response => {\n        if (response.ok) {\n          console.log(\"success!!\");\n        } else {\n          console.log(\"failed\");\n        }\n      });\n    };\n\n    reader.readAsText(input);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"datasetMenu\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leftHeader\",\n      children: \"Create A New Source\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"newSourceContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"newSource\",\n        onClick: setSelectedOption('FILE'),\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"csvFile\",\n          className: \"custom-file-upload\",\n          children: \"Upload a CSV File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"newSource\",\n        onClick: setSelectedOption('API'),\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"csvFile\",\n          className: \"custom-file-upload disabled\",\n          children: \"Connect to API\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"newSource\",\n        onClick: setSelectedOption('FILE'),\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"csvFile\",\n          className: \"custom-file-upload disabled\",\n          children: \"SQL Query\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contentCol\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leftHeader\",\n        children: \"Data Sources\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contentCol\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"datasetList\",\n          children: datasets\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataSourceConfigContainer\",\n        children: [selectedOption == 'FILE' && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"csvFile\",\n          onChange: csvFile,\n          accept: \".csv\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), selectedOption == 'API' && /*#__PURE__*/_jsxDEV(APIConfig, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Data, \"38nvNAX7U6sMbY8i+jZ99JO9OWs=\");\n\n_c = Data;\nexport default Data;\n\nfunction Datasource(props) {\n  const {\n    dataset,\n    selectDataset\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"datasetContainer\",\n    uuid: dataset.sourceid,\n    onClick: selectDataset,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"datasetName\",\n      children: dataset.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"datasetType\",\n      children: dataset.type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = Datasource;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Data\");\n$RefreshReg$(_c2, \"Datasource\");","map":{"version":3,"sources":["C:/Users/schro/Documents/TemplateReports/YFIntegration/frontend/src/Data.js"],"names":["React","useState","useEffect","setState","APIConfig","Cookies","Data","props","userData","setUserData","selectedOption","setSelectedOption","fetch","then","response","json","data","datasets","dataset","dset","selectDataset","push","e","csvFile","preventDefault","input","document","getElementById","files","fileName","value","split","pop","reader","FileReader","delimiter","onload","rawCSV","target","result","csrftoken","get","requestOptions","method","headers","body","JSON","stringify","name","ok","console","log","readAsText","Datasource","sourceid","type"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, setState } from 'react';\r\nimport APIConfig from './APIConfig'\r\n\r\nimport Cookies from 'js-cookie'\r\nfunction Data(props){\r\n    const [userData, setUserData] = useState('')\r\n    const [selectedOption, setSelectedOption] = useState('')\r\n\r\n\r\n    useEffect(() => {\r\n        fetch('get_user_data')\r\n\t\t.then(response => response.json())\r\n\t\t.then(data => setUserData(data))\r\n    }, [])\r\n    let datasets = []\r\n    if (userData){\r\n        for (const dataset of userData){\r\n            let dset = <Datasource dataset={dataset} selectDataset={selectDataset}/>\r\n            datasets.push(dset)\r\n        }\r\n    }\r\n    function selectDataset(e){\r\n\r\n    }\r\n    function csvFile(e) {\r\n        e.preventDefault();\r\n        const input = document.getElementById(\"csvFile\").files[0];\r\n        var fileName = document.getElementById(\"csvFile\").value.split('/').pop().split('\\\\').pop();\r\n        const reader = new FileReader();\r\n        const delimiter = \",\";\r\n        reader.onload = function (e) {\r\n           let rawCSV = e.target.result;\r\n           var csrftoken = Cookies.get('csrftoken');\r\n           const requestOptions = {\r\n             method: 'POST',\r\n             headers: { 'Content-Type': 'application/json','X-CSRFToken': csrftoken },\r\n             body: JSON.stringify({name:fileName, data: rawCSV})\r\n           };\r\n           fetch('upload_data', requestOptions)\r\n               .then(response => {\r\n                 if (response.ok){\r\n                   console.log(\"success!!\")\r\n                 }else{\r\n                   console.log(\"failed\")\r\n                 }\r\n               })            \r\n        }\r\n        reader.readAsText(input);\r\n      };\r\n    return(\r\n    <div className=\"datasetMenu\">        \r\n        <div className=\"leftHeader\">Create A New Source</div>\r\n        <div className=\"newSourceContainer\">\r\n            <div className=\"newSource\" onClick={setSelectedOption('FILE')}>\r\n                <label htmlFor=\"csvFile\" className=\"custom-file-upload\">\r\n                Upload a CSV File\r\n                </label>\r\n            </div>\r\n            <div className=\"newSource\" onClick={setSelectedOption('API')}>\r\n                <label htmlFor=\"csvFile\" className=\"custom-file-upload disabled\">\r\n                Connect to API\r\n                </label> \r\n            </div>\r\n            <div className=\"newSource\" onClick={setSelectedOption('FILE')}>\r\n                <label htmlFor=\"csvFile\" className=\"custom-file-upload disabled\">\r\n                SQL Query\r\n                </label> \r\n            </div>\r\n        </div>\r\n        <div className=\"contentCol\">\r\n            <div className=\"leftHeader\">Data Sources</div>\r\n            <div className=\"contentCol\">\r\n                <div className=\"datasetList\">\r\n                {datasets}\r\n                </div>\r\n            </div>\r\n       \r\n        <div className=\"dataSourceConfigContainer\">\r\n        {selectedOption == 'FILE' && (\r\n            <input type=\"file\" id=\"csvFile\" onChange={csvFile} accept=\".csv\" />\r\n        )}\r\n        {selectedOption == 'API' && (\r\n            <APIConfig />\r\n        )}\r\n        </div>\r\n        </div>\r\n    </div>\r\n      )\r\n  \r\n    \r\n\r\n  }\r\n  export default Data;\r\n\r\n  function Datasource(props){\r\n    const {\r\n        dataset,\r\n        selectDataset\r\n    } = props;\r\n\r\n    return(\r\n        <div className=\"datasetContainer\" uuid={dataset.sourceid} onClick={selectDataset}>\r\n            <div className=\"datasetName\">\r\n                {dataset.name}\r\n            </div>\r\n            <div className=\"datasetType\">\r\n                {dataset.type}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n  }"]},"metadata":{},"sourceType":"module"}