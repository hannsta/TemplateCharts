{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\schro\\\\Documents\\\\TemplateReports\\\\YFIntegration\\\\frontend\\\\src\\\\APIConfig.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, setState } from 'react';\nimport Cookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction APIConfig(props) {\n  _s();\n\n  const [connectionName, setConnectionName] = useState('');\n  const [URL, setURL] = useState('');\n  const [URLParameters, setURLParameters] = useState('');\n  const [paramKey, setParamKey] = useState('');\n  const [sourceId, setSourceId] = useState('');\n  const [connectionId, setConnectionId] = useState('');\n  const [resultObject, setResultObject] = useState('');\n  const {\n    selectedConnection,\n    connName\n  } = props;\n  useEffect(() => {\n    if (selectedConnection) {\n      setConnectionName(connName);\n      setURL(selectedConnection.url);\n      setURLParameters(selectedConnection.parameters);\n      setSourceId(selectedConnection.sourceid);\n      setConnectionId(selectedConnection.connectionid);\n      setResultObject(selectedConnection.resultobject);\n    }\n  }, []);\n\n  function saveURLParameter(idx, type, value) {\n    var paramCopy = URLParameters;\n    console.log(\"paramUpdate\", idx, type, value);\n\n    if (type == 'val') {\n      paramCopy[idx].value = value;\n    } else {\n      paramCopy[idx].key = value;\n    }\n\n    setURLParameters(paramCopy);\n  }\n\n  function addParameter() {\n    var paramCopy = URLParameters;\n\n    if (!paramCopy) {\n      paramCopy = [];\n    }\n\n    paramCopy.push({\n      'idx': paramCopy.length,\n      'key': '',\n      'value': ''\n    });\n    setURLParameters(paramCopy);\n    setParamKey(new Date());\n  }\n\n  function saveAPIConnection() {\n    var csrftoken = Cookies.get('csrftoken');\n    var body = JSON.stringify({\n      'name': connectionName,\n      'url': URL,\n      'parameters': URLParameters,\n      'sourceid': sourceId,\n      'connectionid': connectionId\n    });\n    fetch('save_connection', {\n      method: 'POST',\n      credentials: 'include',\n      mode: 'same-origin',\n      headers: {\n        'Accept': 'application/json',\n        'X-CSRFToken': csrftoken\n      },\n      body: body\n    }).then(response => response.text()).then(data => {\n      var resp = JSON.parse(data);\n      setSourceId(resp.sourceid);\n      setConnectionId(resp.connectionid);\n    });\n  }\n\n  var urlParams = [];\n\n  for (var i = 0; i < URLParameters.length; i++) {\n    var param = URLParameters[i];\n    urlParams.push( /*#__PURE__*/_jsxDEV(URLParameter, {\n      saveURLParameter: saveURLParameter,\n      idx: param.idx,\n      defaultValue: param.value,\n      defaultParam: param.key\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contentCol\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leftHeader\",\n      children: \"Connection Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"connInputSmall\",\n      type: \"text\",\n      value: connectionName,\n      onChange: e => setConnectionName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leftHeader\",\n      children: \"Endpoint URL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"connInput\",\n      type: \"text\",\n      value: URL,\n      onChange: e => setURL(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leftHeader\",\n      children: \"Endpoint Parameters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: addParameter,\n      children: \"Add Parameter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), urlParams, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"saveButton\",\n      onClick: saveAPIConnection,\n      children: \"Save Connection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"connInputSmall\",\n      type: \"text\",\n      value: resultObject,\n      onChange: e => setResultObject(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n\n_s(APIConfig, \"t7eqcufSoLF7G91j/4Qvsss8HJs=\");\n\n_c = APIConfig;\n\nfunction URLParameter(props) {\n  _s2();\n\n  const [parameter, setParameter] = useState('');\n  const [value, setValue] = useState('');\n  const {\n    saveURLParameter,\n    idx,\n    defaultValue,\n    defaultParam\n  } = props;\n  useEffect(() => {\n    setValue(defaultValue);\n    setParameter(defaultParam);\n  }, []);\n\n  function setParam(e) {\n    saveURLParameter(idx, 'param', e.target.value);\n    setParameter(e.target.value);\n  }\n\n  function setVal(e) {\n    saveURLParameter(idx, 'val', e.target.value);\n    setValue(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"connInputSmall\",\n      type: \"text\",\n      value: parameter,\n      onChange: setParam\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"connInputSmall\",\n      type: \"text\",\n      value: value,\n      onChange: setVal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(URLParameter, \"0DJ40m9p/qRqQxBVyPuYD5fXN4Y=\");\n\n_c2 = URLParameter;\nexport default APIConfig;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"APIConfig\");\n$RefreshReg$(_c2, \"URLParameter\");","map":{"version":3,"sources":["C:/Users/schro/Documents/TemplateReports/YFIntegration/frontend/src/APIConfig.js"],"names":["React","useState","useEffect","setState","Cookies","APIConfig","props","connectionName","setConnectionName","URL","setURL","URLParameters","setURLParameters","paramKey","setParamKey","sourceId","setSourceId","connectionId","setConnectionId","resultObject","setResultObject","selectedConnection","connName","url","parameters","sourceid","connectionid","resultobject","saveURLParameter","idx","type","value","paramCopy","console","log","key","addParameter","push","length","Date","saveAPIConnection","csrftoken","get","body","JSON","stringify","fetch","method","credentials","mode","headers","then","response","text","data","resp","parse","urlParams","i","param","e","target","URLParameter","parameter","setParameter","setValue","defaultValue","defaultParam","setParam","setVal"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, setState } from 'react';\r\nimport Cookies from 'js-cookie';\r\n\r\nfunction APIConfig(props){\r\n    const [connectionName, setConnectionName] = useState('')\r\n    const [URL, setURL] = useState('')\r\n    const [URLParameters, setURLParameters] = useState('')\r\n    const [paramKey, setParamKey] = useState('')\r\n    const [sourceId, setSourceId] = useState('')\r\n    const [connectionId, setConnectionId] = useState('')\r\n    const [resultObject,setResultObject] = useState('')\r\n    const {\r\n        selectedConnection,\r\n        connName\r\n    } = props\r\n\r\n\r\n    useEffect(() => {\r\n        if (selectedConnection){\r\n            setConnectionName(connName)\r\n            setURL(selectedConnection.url)\r\n            setURLParameters(selectedConnection.parameters)\r\n            setSourceId(selectedConnection.sourceid)\r\n            setConnectionId(selectedConnection.connectionid)      \r\n            setResultObject(selectedConnection.resultobject)      \r\n        }\r\n    }, [])\r\n    function saveURLParameter(idx, type, value){\r\n        var paramCopy = URLParameters\r\n        console.log(\"paramUpdate\",idx, type, value)\r\n        if (type=='val'){\r\n            paramCopy[idx].value = value\r\n        }else{\r\n            paramCopy[idx].key = value\r\n        }\r\n        setURLParameters(paramCopy)\r\n    }\r\n    function addParameter(){\r\n        var paramCopy = URLParameters\r\n        if (!paramCopy){\r\n            paramCopy=[]\r\n        }\r\n        paramCopy.push({'idx':paramCopy.length,'key':'','value':''})\r\n        setURLParameters(paramCopy)\r\n        setParamKey(new Date())\r\n    }\r\n    function saveAPIConnection(){\r\n        var csrftoken = Cookies.get('csrftoken');\r\n        var body = JSON.stringify({\r\n          'name':connectionName,\r\n          'url':URL,\r\n          'parameters': URLParameters,\r\n          'sourceid':sourceId,\r\n          'connectionid':connectionId\r\n        })\r\n        fetch('save_connection', {\r\n          method: 'POST',\r\n          credentials: 'include',\r\n          mode: 'same-origin',\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'X-CSRFToken':csrftoken\r\n          },\r\n          body: body\r\n        }).then(response => response.text())\r\n        .then(data => {\r\n            var resp = JSON.parse(data)\r\n            setSourceId(resp.sourceid)\r\n            setConnectionId(resp.connectionid)\r\n        })\r\n             \r\n    }\r\n    var urlParams = []\r\n    for (var i=0; i < URLParameters.length; i++){\r\n        var param = URLParameters[i]\r\n        urlParams.push(\r\n            <URLParameter saveURLParameter={saveURLParameter} idx={param.idx} defaultValue={param.value} defaultParam={param.key} />\r\n        )\r\n    }\r\n    return(\r\n        <div className=\"contentCol\">\r\n            <div className=\"leftHeader\">Connection Name</div>\r\n            <input className=\"connInputSmall\" type=\"text\" value={connectionName} onChange={e => setConnectionName(e.target.value)}></input>\r\n            <div className=\"leftHeader\">Endpoint URL</div>\r\n            <input className=\"connInput\" type=\"text\" value={URL} onChange={e => setURL(e.target.value)}></input>\r\n            <div className=\"leftHeader\">Endpoint Parameters</div>\r\n            <div onClick={addParameter}>Add Parameter</div>\r\n            {urlParams}\r\n            <div className=\"saveButton\" onClick={saveAPIConnection}>Save Connection</div>\r\n            <input className=\"connInputSmall\" type=\"text\" value={resultObject} onChange={e => setResultObject(e.target.value)}></input>\r\n        </div>\r\n    )\r\n  }\r\n\r\n  function URLParameter(props){\r\n    const [parameter, setParameter] = useState('')\r\n    const [value, setValue] = useState('')\r\n    const {\r\n        saveURLParameter,\r\n        idx,\r\n        defaultValue,\r\n        defaultParam\r\n        \r\n    } = props\r\n    useEffect(() => {\r\n        setValue(defaultValue)\r\n        setParameter(defaultParam)\r\n    }, [])\r\n    function setParam(e){\r\n        saveURLParameter(idx, 'param', e.target.value)\r\n        setParameter(e.target.value)\r\n    }\r\n    function setVal(e){\r\n        saveURLParameter(idx, 'val', e.target.value)\r\n        setValue(e.target.value)\r\n    }  \r\n    return(\r\n        <div>\r\n            <input className=\"connInputSmall\" type=\"text\" value={parameter} onChange={setParam}></input>\r\n            <input className=\"connInputSmall\" type=\"text\" value={value} onChange={setVal}></input>\r\n        </div>\r\n    )\r\n  }  \r\n  export default APIConfig;"]},"metadata":{},"sourceType":"module"}