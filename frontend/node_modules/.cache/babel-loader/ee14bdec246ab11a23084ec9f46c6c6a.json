{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\schro\\\\Documents\\\\TemplateReports\\\\YFIntegration\\\\frontend\\\\src\\\\WidgetList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, setState } from 'react';\nimport Editor from './Editor';\nimport Configuration from './Helpers';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WidgetList(props) {\n  _s();\n\n  const {\n    loadTemplate\n  } = props;\n  const [templates, setTemplates] = useState('');\n  useEffect(() => {\n    fetch('get_templates').then(response => response.text()).then(data => setTemplates(JSON.parse(data)));\n  }, []);\n\n  function selectTemplate(e) {\n    loadTemplate(e.target.getAttribute(\"uuid\"));\n  }\n\n  var templateObj = [];\n\n  if (templates) {\n    for (var template of templates) {\n      templateObj.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: selectTemplate,\n        className: \"templateIcon\",\n        uuid: template[1],\n        children: template[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 30\n      }, this));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"templateList\",\n    children: templateObj\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WidgetList, \"V9veQUl++wGUltEpWy4WiP8YrO8=\");\n\n_c = WidgetList;\nexport default TemplateList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WidgetList\");","map":{"version":3,"sources":["C:/Users/schro/Documents/TemplateReports/YFIntegration/frontend/src/WidgetList.js"],"names":["React","useState","useEffect","setState","Editor","Configuration","FontAwesomeIcon","faTimes","faCheck","ToastContainer","toast","WidgetList","props","loadTemplate","templates","setTemplates","fetch","then","response","text","data","JSON","parse","selectTemplate","e","target","getAttribute","templateObj","template","push","TemplateList"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,aAAP,MAA0B,WAA1B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,mCAAjC;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACvB,QAAM;AACFC,IAAAA;AADE,MAEFD,KAFJ;AAGA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,KAAK,CAAC,eAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAIL,YAAY,CAACM,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAD,CAF1B;AAGD,GAJM,EAIJ,EAJI,CAAT;;AAKA,WAASG,cAAT,CAAwBC,CAAxB,EAA0B;AACtBX,IAAAA,YAAY,CAACW,CAAC,CAACC,MAAF,CAASC,YAAT,CAAsB,MAAtB,CAAD,CAAZ;AACH;;AACD,MAAIC,WAAW,GAAG,EAAlB;;AACA,MAAIb,SAAJ,EAAc;AACV,SAAK,IAAIc,QAAT,IAAqBd,SAArB,EAA+B;AAC3Ba,MAAAA,WAAW,CAACE,IAAZ,eAAiB;AAAK,QAAA,OAAO,EAAEN,cAAd;AAA8B,QAAA,SAAS,EAAC,cAAxC;AAAuD,QAAA,IAAI,EAAEK,QAAQ,CAAC,CAAD,CAArE;AAAA,kBAA2EA,QAAQ,CAAC,CAAD;AAAnF;AAAA;AAAA;AAAA;AAAA,cAAjB;AACH;AACJ;;AACD,sBACA;AAAK,IAAA,EAAE,EAAC,cAAR;AAAA,cACKD;AADL;AAAA;AAAA;AAAA;AAAA,UADA;AAKH;;GAzBQhB,U;;KAAAA,U;AA6BT,eAAemB,YAAf","sourcesContent":["import React, { useState, useEffect, setState } from 'react';\r\nimport Editor from './Editor'\r\nimport Configuration from './Helpers'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction WidgetList(props) {\r\n    const {\r\n        loadTemplate\r\n    } = props\r\n    const [templates, setTemplates] = useState('')\r\n\r\n    useEffect(() => {\r\n        fetch('get_templates')\r\n        .then(response => response.text())\r\n        .then(data => setTemplates(JSON.parse(data)))\r\n      }, []);\r\n    function selectTemplate(e){\r\n        loadTemplate(e.target.getAttribute(\"uuid\"))\r\n    }\r\n    var templateObj = []\r\n    if (templates){\r\n        for (var template of templates){\r\n            templateObj.push(<div onClick={selectTemplate} className=\"templateIcon\" uuid={template[1]}>{template[0]}</div>)\r\n        }\r\n    }\r\n    return (\r\n    <div id=\"templateList\">\r\n        {templateObj}\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default TemplateList;\r\n"]},"metadata":{},"sourceType":"module"}