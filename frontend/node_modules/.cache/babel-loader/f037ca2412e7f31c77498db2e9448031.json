{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\schro\\\\Documents\\\\TemplateReports\\\\YFIntegration\\\\frontend\\\\src\\\\Data.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, setState } from 'react';\nimport APIConfig from './APIConfig';\nimport Cookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Data(props) {\n  _s();\n\n  const [userData, setUserData] = useState('');\n  useEffect(() => {\n    fetch('getUserData').then(response => response.json()).then(data => setUserData(data));\n  }, []);\n  let datasets = [];\n\n  if (userData) {\n    for (const dataset of userData) {\n      let dset = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reportRow\",\n        children: dataset.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 24\n      }, this);\n\n      datasets.push(dset);\n    }\n  }\n\n  function csvFile(e) {\n    e.preventDefault();\n    const input = document.getElementById(\"csvFile\").files[0];\n    var fileName = document.getElementById(\"csvFile\").value.split('/').pop().split('\\\\').pop();\n    const reader = new FileReader();\n    const delimiter = \",\";\n\n    reader.onload = function (e) {\n      let rawCSV = e.target.result;\n      var csrftoken = Cookies.get('csrftoken');\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': csrftoken\n        },\n        body: JSON.stringify({\n          name: fileName,\n          data: rawCSV\n        })\n      };\n      fetch('upload_data', requestOptions).then(response => {\n        if (response.ok) {\n          console.log(\"success!!\");\n        } else {\n          console.log(\"failed\");\n        }\n      });\n    };\n\n    reader.readAsText(input);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contentCol\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leftHeader\",\n      children: \"Create A New Source\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataSourceContent\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploadFile\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"csvFile\",\n            className: \"custom-file-upload\",\n            children: [\"Upload a CSV File\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"csvFile\",\n              onChange: csvFile,\n              accept: \".csv\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataSourceContent\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploadFile\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"csvFile\",\n            className: \"custom-file-upload disabled\",\n            children: [\"Connect to API\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"csvFile\",\n              onChange: csvFile,\n              accept: \".csv\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataSourceContent\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploadFile\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"csvFile\",\n            className: \"custom-file-upload disabled\",\n            children: [\"SQL Query\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"csvFile\",\n              onChange: csvFile,\n              accept: \".csv\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contentCol\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leftHeader\",\n        children: \"Data Sources\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contentCol\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"paddedContent\",\n          children: datasets\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(APIConfig, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Data, \"tgc/+7Id2Rx92uWHdDhMbDR55/s=\");\n\n_c = Data;\nexport default Data;\n\nvar _c;\n\n$RefreshReg$(_c, \"Data\");","map":{"version":3,"sources":["C:/Users/schro/Documents/TemplateReports/YFIntegration/frontend/src/Data.js"],"names":["React","useState","useEffect","setState","APIConfig","Cookies","Data","props","userData","setUserData","fetch","then","response","json","data","datasets","dataset","dset","name","push","csvFile","e","preventDefault","input","document","getElementById","files","fileName","value","split","pop","reader","FileReader","delimiter","onload","rawCSV","target","result","csrftoken","get","requestOptions","method","headers","body","JSON","stringify","ok","console","log","readAsText"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, setState } from 'react';\r\nimport APIConfig from './APIConfig'\r\n\r\nimport Cookies from 'js-cookie'\r\nfunction Data(props){\r\n    const [userData, setUserData] = useState('')\r\n\r\n\r\n    useEffect(() => {\r\n        fetch('getUserData')\r\n\t\t.then(response => response.json())\r\n\t\t.then(data => setUserData(data))\r\n    }, [])\r\n    let datasets = []\r\n    if (userData){\r\n        for (const dataset of userData){\r\n            let dset = <div className=\"reportRow\">{dataset.name}</div>\r\n            datasets.push(dset)\r\n        }\r\n    }\r\n    function csvFile(e) {\r\n        e.preventDefault();\r\n        const input = document.getElementById(\"csvFile\").files[0];\r\n        var fileName = document.getElementById(\"csvFile\").value.split('/').pop().split('\\\\').pop();\r\n        const reader = new FileReader();\r\n        const delimiter = \",\";\r\n        reader.onload = function (e) {\r\n           let rawCSV = e.target.result;\r\n           var csrftoken = Cookies.get('csrftoken');\r\n           const requestOptions = {\r\n             method: 'POST',\r\n             headers: { 'Content-Type': 'application/json','X-CSRFToken': csrftoken },\r\n             body: JSON.stringify({name:fileName, data: rawCSV})\r\n           };\r\n           fetch('upload_data', requestOptions)\r\n               .then(response => {\r\n                 if (response.ok){\r\n                   console.log(\"success!!\")\r\n                 }else{\r\n                   console.log(\"failed\")\r\n                 }\r\n               })            \r\n        }\r\n        reader.readAsText(input);\r\n      };\r\n    return(\r\n    <div className=\"contentCol\">\r\n        <div className=\"leftHeader\">Create A New Source</div>\r\n        <div className=\"content\">\r\n            <div className=\"dataSourceContent\">\r\n                <div className=\"uploadFile\">\r\n                    <label htmlFor=\"csvFile\" className=\"custom-file-upload\">\r\n                    Upload a CSV File\r\n                    <input type=\"file\" id=\"csvFile\" onChange={csvFile} accept=\".csv\" />\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <div className=\"dataSourceContent\">\r\n                <div className=\"uploadFile\">\r\n                    <label htmlFor=\"csvFile\" className=\"custom-file-upload disabled\">\r\n                    Connect to API\r\n                    <input type=\"file\" id=\"csvFile\" onChange={csvFile} accept=\".csv\" />\r\n                    </label> \r\n                </div>\r\n            </div>\r\n            <div className=\"dataSourceContent\">\r\n                <div className=\"uploadFile\">\r\n                    <label htmlFor=\"csvFile\" className=\"custom-file-upload disabled\">\r\n                    SQL Query\r\n                    <input type=\"file\" id=\"csvFile\" onChange={csvFile} accept=\".csv\" />\r\n                    </label> \r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"contentCol\">\r\n            <div className=\"leftHeader\">Data Sources</div>\r\n            <div className=\"contentCol\">\r\n                <div className=\"paddedContent\">\r\n                {datasets}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <APIConfig />\r\n        </div>\r\n      )\r\n  \r\n    \r\n\r\n  }\r\n  export default Data;"]},"metadata":{},"sourceType":"module"}