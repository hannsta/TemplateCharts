{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\schro\\\\Documents\\\\TemplateReports\\\\YFIntegration\\\\frontend\\\\src\\\\MenuRenderer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, setState } from 'react';\nimport Editor from './Editor';\nimport Configuration from './Helpers';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MenuRenderer(props) {\n  _s();\n\n  const {\n    parsedTemplate,\n    properties,\n    saveProperties\n  } = props;\n  const [html, setHtml] = useState('');\n  const [menuOptions, setMenuOptions] = useState('');\n  var inputMenu = [];\n  console.log(\"rerendering menu\");\n\n  for (var userInput of parsedTemplate) {\n    if (userInput.type == 'String') {\n      inputMenu.push( /*#__PURE__*/_jsxDEV(TextInput, {\n        value: properties[userInput.name],\n        inputName: userInput.name,\n        saveProperties: saveProperties\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 24\n      }, this));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"inputMenu\",\n    children: inputMenu\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this);\n}\n\n_s(MenuRenderer, \"e6UZGWTDdh38kFwEMORTEGGHHvI=\");\n\n_c = MenuRenderer;\n\nfunction TextInput(props) {\n  const {\n    value,\n    inputName,\n    saveProperties\n  } = props;\n\n  function handleChange(e) {\n    console.log(\"saving\", inputName, e.target.value);\n    saveProperties(inputName, e.target.value);\n  }\n\n  if (!value) {\n    value = '';\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: inputName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: value,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this);\n}\n\n_c2 = TextInput;\nexport default MenuRenderer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MenuRenderer\");\n$RefreshReg$(_c2, \"TextInput\");","map":{"version":3,"sources":["C:/Users/schro/Documents/TemplateReports/YFIntegration/frontend/src/MenuRenderer.js"],"names":["React","useState","useEffect","setState","Editor","Configuration","FontAwesomeIcon","faTimes","faCheck","ToastContainer","toast","MenuRenderer","props","parsedTemplate","properties","saveProperties","html","setHtml","menuOptions","setMenuOptions","inputMenu","console","log","userInput","type","push","name","TextInput","value","inputName","handleChange","e","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,aAAP,MAA0B,WAA1B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,mCAAjC;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC7B,QAAM;AACFC,IAAAA,cADE;AAEFC,IAAAA,UAFE;AAGFC,IAAAA;AAHE,MAIFH,KAJJ;AAKA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACiB,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAC,EAAD,CAA9C;AAIA,MAAImB,SAAS,GAAG,EAAhB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;;AACA,OAAK,IAAIC,SAAT,IAAsBV,cAAtB,EAAqC;AACjC,QAAIU,SAAS,CAACC,IAAV,IAAgB,QAApB,EAA6B;AACzBJ,MAAAA,SAAS,CAACK,IAAV,eAAe,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEX,UAAU,CAACS,SAAS,CAACG,IAAX,CAA5B;AAA8C,QAAA,SAAS,EAAEH,SAAS,CAACG,IAAnE;AAAyE,QAAA,cAAc,EAAEX;AAAzF;AAAA;AAAA;AAAA;AAAA,cAAf;AACH;AACJ;;AAED,sBACE;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA,cACKK;AADL;AAAA;AAAA;AAAA;AAAA,UADF;AAKC;;GAxBQT,Y;;KAAAA,Y;;AA2BT,SAASgB,SAAT,CAAmBf,KAAnB,EAA0B;AACxB,QAAM;AACFgB,IAAAA,KADE;AAEFC,IAAAA,SAFE;AAGFd,IAAAA;AAHE,MAIFH,KAJJ;;AAMA,WAASkB,YAAT,CAAsBC,CAAtB,EAAyB;AACvBV,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBO,SAArB,EAAgCE,CAAC,CAACC,MAAF,CAASJ,KAAzC;AACAb,IAAAA,cAAc,CAACc,SAAD,EAAYE,CAAC,CAACC,MAAF,CAASJ,KAArB,CAAd;AACD;;AACD,MAAI,CAACA,KAAL,EAAW;AACPA,IAAAA,KAAK,GAAC,EAAN;AACH;;AACD,sBACI;AAAA,4BACI;AAAA,gBAAMC;AAAN;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAED,KAA1B;AAAiC,MAAA,QAAQ,EAAEE;AAA3C;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOD;;MArBQH,S;AAsBT,eAAehB,YAAf","sourcesContent":["import React, { useState, useEffect, setState } from 'react';\r\nimport Editor from './Editor'\r\nimport Configuration from './Helpers'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction MenuRenderer(props) {\r\nconst {\r\n    parsedTemplate,\r\n    properties,\r\n    saveProperties\r\n} = props\r\nconst [html, setHtml] = useState('')\r\nconst [menuOptions, setMenuOptions] = useState('')\r\n\r\n\r\n\r\nvar inputMenu = []\r\nconsole.log(\"rerendering menu\")\r\nfor (var userInput of parsedTemplate){\r\n    if (userInput.type=='String'){\r\n        inputMenu.push(<TextInput value={properties[userInput.name]} inputName={userInput.name} saveProperties={saveProperties}/>)\r\n    }\r\n}\r\n\r\nreturn (\r\n  <div id=\"inputMenu\">\r\n      {inputMenu}\r\n  </div>\r\n)\r\n}\r\n\r\n\r\nfunction TextInput(props) {\r\n  const {\r\n      value,\r\n      inputName,\r\n      saveProperties\r\n  } = props\r\n\r\n  function handleChange(e) {\r\n    console.log(\"saving\",inputName, e.target.value)\r\n    saveProperties(inputName, e.target.value)\r\n  }\r\n  if (!value){\r\n      value=''\r\n  }\r\n  return (\r\n      <div>\r\n          <div>{inputName}</div>\r\n          <input type=\"text\" value={value} onChange={handleChange}></input>\r\n      </div>\r\n  )\r\n\r\n}\r\nexport default MenuRenderer;\r\n"]},"metadata":{},"sourceType":"module"}