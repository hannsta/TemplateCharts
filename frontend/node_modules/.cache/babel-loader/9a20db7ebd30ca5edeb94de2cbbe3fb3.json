{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\schro\\\\Documents\\\\TemplateReports\\\\YFIntegration\\\\frontend\\\\src\\\\TemplateGenerator.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, setState } from 'react';\nimport Editor from './Editor';\nimport MenuRenderer from './MenuRenderer';\nimport Cookies from 'js-cookie';\nimport Configuration from './Helpers';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport TemplateList from './TemplateList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TemplateGenerator() {\n  _s();\n\n  const [template, setTemplate] = useState('');\n  const [scripts, setScripts] = useState('');\n  const [templateName, setTemplateName] = useState('');\n  const [templateId, setTemplateId] = useState('');\n  const [parsedTemplate, setParsedTemplate] = useState('');\n  const [properties, setProperties] = useState('');\n  const [time, setTime] = useState('');\n  const [userData, setUserData] = useState('');\n  const [dataId, setDataId] = useState('');\n  const [dataset, setDataset] = useState('');\n  const [metaData, setMetaData] = useState('');\n\n  function parseTemplate() {\n    var csrftoken = Cookies.get('csrftoken');\n    var body = JSON.stringify({\n      'properties': properties,\n      'script': template\n    });\n    fetch('parse_options', {\n      method: 'POST',\n      credentials: 'include',\n      mode: 'same-origin',\n      headers: {\n        'Accept': 'application/json',\n        'X-CSRFToken': csrftoken\n      },\n      body: body\n    }).then(response => response.text()).then(data => setParsedTemplate(JSON.parse(data)));\n  }\n\n  function saveTemplate() {\n    var csrftoken = Cookies.get('csrftoken');\n    var body = JSON.stringify({\n      'scripts': scripts,\n      'template': template,\n      'templateName': templateName,\n      'templateId': templateId\n    });\n    fetch('save_template', {\n      method: 'POST',\n      credentials: 'include',\n      mode: 'same-origin',\n      headers: {\n        'Accept': 'application/json',\n        'X-CSRFToken': csrftoken\n      },\n      body: body\n    }).then(response => response.text()).then(data => setTemplateId(data));\n  }\n\n  function loadTemplate(id) {\n    fetch('get_template?templateid=' + id).then(response => response.text()).then(data => {\n      var templateData = JSON.parse(data);\n      setTemplate(templateData[0].fields.template);\n      setScripts(templateData[0].fields.scripts);\n      setTemplateId(templateData[0].fields.templateid);\n      setTemplateName(templateData[0].fields.name);\n      setParsedTemplate(templateData[0].parsed);\n    });\n  }\n\n  function runTemplate() {\n    var csrftoken = Cookies.get('csrftoken');\n    var body = JSON.stringify({\n      'properties': properties,\n      'script': template\n    });\n    fetch('get_script', {\n      method: 'POST',\n      credentials: 'include',\n      mode: 'same-origin',\n      headers: {\n        'Accept': 'application/json',\n        'X-CSRFToken': csrftoken\n      },\n      body: body\n    }).then(response => response.text()).then(txt => {\n      var scriptURLs = scripts.split(/\\r?\\n/);\n\n      for (var scriptURL of scriptURLs) {\n        var script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.async = true;\n\n        script.onload = function () {};\n\n        script.src = scriptURL;\n        document.getElementsByTagName('head')[0].appendChild(script);\n      }\n\n      eval(txt);\n    });\n  }\n\n  function saveProperties(property, value) {\n    var propertyCopy = properties;\n\n    if (!propertyCopy) {\n      propertyCopy = {};\n    }\n\n    propertyCopy[property] = value;\n    setProperties(propertyCopy);\n  }\n\n  function saveTemplateName(e) {\n    setTemplateName(e.target.value);\n  }\n\n  function getDataset(e) {\n    fetch('getData?sourceid=' + e.target.getAttribute(\"uuid\")).then(response => response.json()).then(data => getMetaData(data));\n  }\n\n  function getMetaData(data) {\n    var ds = JSON.parse(data);\n    var colNames = Object.keys(ds);\n    var metaData = {};\n\n    for (var col of colNames) {\n      if (isNaN(ds[col][0])) {\n        metaData[col] = 'NUMERIC';\n      } else {\n        metaData[col] = 'TEXT';\n      }\n    }\n\n    setDataset(ds);\n    setMetaData(metaData);\n  }\n\n  useEffect(() => {\n    fetch('getUserData').then(response => response.json()).then(data => setUserData(data));\n  }, []);\n  let datasets = [];\n\n  if (userData) {\n    for (const dataset of userData) {\n      let dset = /*#__PURE__*/_jsxDEV(\"div\", {\n        uuid: dataset.sourceid,\n        onClick: getDataset,\n        className: \"reportRow\",\n        children: dataset.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 18\n      }, this);\n\n      datasets.push(dset);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"templater\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"templateContainer\",\n      children: [datasets, /*#__PURE__*/_jsxDEV(TemplateList, {\n        loadTemplate: loadTemplate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"parseButton\",\n        onClick: parseTemplate,\n        children: \"Parse Template\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"parseButton\",\n        onClick: saveTemplate,\n        children: \"Save Template\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        defaultValue: \"New Template\",\n        value: templateName,\n        onChange: saveTemplateName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Editor, {\n        language: \"javascript\",\n        displayName: \"Scripts\",\n        value: scripts,\n        onChange: setScripts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Editor, {\n        language: \"javascript\",\n        displayName: \"Chart Template\",\n        value: template,\n        onChange: setTemplate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), \"-\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"optionsContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"parseButton\",\n        onClick: runTemplate,\n        children: \"Run JS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuRenderer, {\n        parsedTemplate: parsedTemplate,\n        properties: properties,\n        saveProperties: saveProperties,\n        metaData: metaData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"renderContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 3\n  }, this);\n}\n\n_s(TemplateGenerator, \"NoaK8ksvPBFoTeStbtImqyjmveU=\");\n\n_c = TemplateGenerator;\nexport default TemplateGenerator;\n\nvar _c;\n\n$RefreshReg$(_c, \"TemplateGenerator\");","map":{"version":3,"sources":["C:/Users/schro/Documents/TemplateReports/YFIntegration/frontend/src/TemplateGenerator.js"],"names":["React","useState","useEffect","setState","Editor","MenuRenderer","Cookies","Configuration","FontAwesomeIcon","faTimes","faCheck","ToastContainer","toast","TemplateList","TemplateGenerator","template","setTemplate","scripts","setScripts","templateName","setTemplateName","templateId","setTemplateId","parsedTemplate","setParsedTemplate","properties","setProperties","time","setTime","userData","setUserData","dataId","setDataId","dataset","setDataset","metaData","setMetaData","parseTemplate","csrftoken","get","body","JSON","stringify","fetch","method","credentials","mode","headers","then","response","text","data","parse","saveTemplate","loadTemplate","id","templateData","fields","templateid","name","parsed","runTemplate","txt","scriptURLs","split","scriptURL","script","document","createElement","type","async","onload","src","getElementsByTagName","appendChild","eval","saveProperties","property","value","propertyCopy","saveTemplateName","e","target","getDataset","getAttribute","json","getMetaData","ds","colNames","Object","keys","col","isNaN","datasets","dset","sourceid","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,aAAP,MAA0B,WAA1B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,mCAAjC;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,SAASC,iBAAT,GAA6B;AAAA;;AAE7B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACkB,YAAD,EAAeC,eAAf,IAAkCnB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACoB,UAAD,EAAaC,aAAb,IAA8BrB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACsB,cAAD,EAAiBC,iBAAjB,IAAsCvB,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACwB,UAAD,EAAaC,aAAb,IAA8BzB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAC0B,IAAD,EAAOC,OAAP,IAAkB3B,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAAC4B,QAAD,EAAWC,WAAX,IAA0B7B,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC8B,MAAD,EAASC,SAAT,IAAsB/B,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACgC,OAAD,EAAUC,UAAV,IAAwBjC,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACkC,QAAD,EAAWC,WAAX,IAA0BnC,QAAQ,CAAC,EAAD,CAAxC;;AAIA,WAASoC,aAAT,GAAwB;AACtB,QAAIC,SAAS,GAAGhC,OAAO,CAACiC,GAAR,CAAY,WAAZ,CAAhB;AACA,QAAIC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAC,oBAAajB,UAAd;AAAyB,gBAASV;AAAlC,KAAf,CAAX;AACA4B,IAAAA,KAAK,CAAC,eAAD,EAAkB;AACrBC,MAAAA,MAAM,EAAE,MADa;AAErBC,MAAAA,WAAW,EAAE,SAFQ;AAGrBC,MAAAA,IAAI,EAAE,aAHe;AAIrBC,MAAAA,OAAO,EAAE;AACP,kBAAU,kBADH;AAEP,uBAAcT;AAFP,OAJY;AAQrBE,MAAAA,IAAI,EAAEA;AARe,KAAlB,CAAL,CASGQ,IATH,CASQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EATpB,EAUCF,IAVD,CAUMG,IAAI,IAAI3B,iBAAiB,CAACiB,IAAI,CAACW,KAAL,CAAWD,IAAX,CAAD,CAV/B;AAYD;;AACD,WAASE,YAAT,GAAuB;AACrB,QAAIf,SAAS,GAAGhC,OAAO,CAACiC,GAAR,CAAY,WAAZ,CAAhB;AACA,QAAIC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AACxB,iBAAUzB,OADc;AAExB,kBAAWF,QAFa;AAGxB,sBAAgBI,YAHQ;AAIxB,oBAAaE;AAJW,KAAf,CAAX;AAMAsB,IAAAA,KAAK,CAAC,eAAD,EAAkB;AACrBC,MAAAA,MAAM,EAAE,MADa;AAErBC,MAAAA,WAAW,EAAE,SAFQ;AAGrBC,MAAAA,IAAI,EAAE,aAHe;AAIrBC,MAAAA,OAAO,EAAE;AACP,kBAAU,kBADH;AAEP,uBAAcT;AAFP,OAJY;AAQrBE,MAAAA,IAAI,EAAEA;AARe,KAAlB,CAAL,CASGQ,IATH,CASQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EATpB,EAUCF,IAVD,CAUMG,IAAI,IAAI7B,aAAa,CAAC6B,IAAD,CAV3B;AAYD;;AACD,WAASG,YAAT,CAAsBC,EAAtB,EAAyB;AACvBZ,IAAAA,KAAK,CAAC,6BAA2BY,EAA5B,CAAL,CACCP,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACZ,UAAIK,YAAY,GAAGf,IAAI,CAACW,KAAL,CAAWD,IAAX,CAAnB;AACAnC,MAAAA,WAAW,CAACwC,YAAY,CAAC,CAAD,CAAZ,CAAgBC,MAAhB,CAAuB1C,QAAxB,CAAX;AACAG,MAAAA,UAAU,CAACsC,YAAY,CAAC,CAAD,CAAZ,CAAgBC,MAAhB,CAAuBxC,OAAxB,CAAV;AACAK,MAAAA,aAAa,CAACkC,YAAY,CAAC,CAAD,CAAZ,CAAgBC,MAAhB,CAAuBC,UAAxB,CAAb;AACAtC,MAAAA,eAAe,CAACoC,YAAY,CAAC,CAAD,CAAZ,CAAgBC,MAAhB,CAAuBE,IAAxB,CAAf;AACAnC,MAAAA,iBAAiB,CAACgC,YAAY,CAAC,CAAD,CAAZ,CAAgBI,MAAjB,CAAjB;AACD,KATD;AAUD;;AACD,WAASC,WAAT,GAAsB;AACpB,QAAIvB,SAAS,GAAGhC,OAAO,CAACiC,GAAR,CAAY,WAAZ,CAAhB;AACA,QAAIC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAC,oBAAajB,UAAd;AAAyB,gBAASV;AAAlC,KAAf,CAAX;AACA4B,IAAAA,KAAK,CAAC,YAAD,EAAc;AACjBC,MAAAA,MAAM,EAAE,MADS;AAEjBC,MAAAA,WAAW,EAAE,SAFI;AAGjBC,MAAAA,IAAI,EAAE,aAHW;AAIjBC,MAAAA,OAAO,EAAE;AACP,kBAAU,kBADH;AAEP,uBAAcT;AAFP,OAJQ;AAQjBE,MAAAA,IAAI,EAACA;AARY,KAAd,CAAL,CAUCQ,IAVD,CAUMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAVlB,EAWCF,IAXD,CAWMc,GAAG,IAAI;AACX,UAAIC,UAAU,GAAG9C,OAAO,CAAC+C,KAAR,CAAc,OAAd,CAAjB;;AACA,WAAK,IAAIC,SAAT,IAAsBF,UAAtB,EAAiC;AAC/B,YAAIG,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;AACAF,QAAAA,MAAM,CAACG,IAAP,GAAc,iBAAd;AACAH,QAAAA,MAAM,CAACI,KAAP,GAAe,IAAf;;AACAJ,QAAAA,MAAM,CAACK,MAAP,GAAgB,YAAU,CACzB,CADD;;AAEAL,QAAAA,MAAM,CAACM,GAAP,GAAaP,SAAb;AACAE,QAAAA,QAAQ,CAACM,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyCC,WAAzC,CAAqDR,MAArD;AACD;;AACDS,MAAAA,IAAI,CAACb,GAAD,CAAJ;AACD,KAvBD;AAwBD;;AACD,WAASc,cAAT,CAAwBC,QAAxB,EAAkCC,KAAlC,EAAwC;AACtC,QAAIC,YAAY,GAAGtD,UAAnB;;AACA,QAAI,CAACsD,YAAL,EAAkB;AAChBA,MAAAA,YAAY,GAAC,EAAb;AACD;;AACDA,IAAAA,YAAY,CAACF,QAAD,CAAZ,GAAyBC,KAAzB;AACApD,IAAAA,aAAa,CAACqD,YAAD,CAAb;AAED;;AACD,WAASC,gBAAT,CAA0BC,CAA1B,EAA4B;AAC1B7D,IAAAA,eAAe,CAAC6D,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAf;AACD;;AACD,WAASK,UAAT,CAAoBF,CAApB,EAAsB;AACpBtC,IAAAA,KAAK,CAAC,sBAAoBsC,CAAC,CAACC,MAAF,CAASE,YAAT,CAAsB,MAAtB,CAArB,CAAL,CACCpC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACoC,IAAT,EADlB,EAECrC,IAFD,CAEMG,IAAI,IAAImC,WAAW,CAACnC,IAAD,CAFzB;AAID;;AACD,WAASmC,WAAT,CAAqBnC,IAArB,EAA0B;AACxB,QAAIoC,EAAE,GAAG9C,IAAI,CAACW,KAAL,CAAWD,IAAX,CAAT;AACA,QAAIqC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYH,EAAZ,CAAf;AACA,QAAIpD,QAAQ,GAAG,EAAf;;AACA,SAAK,IAAIwD,GAAT,IAAgBH,QAAhB,EAAyB;AACvB,UAAII,KAAK,CAACL,EAAE,CAACI,GAAD,CAAF,CAAQ,CAAR,CAAD,CAAT,EAAsB;AACpBxD,QAAAA,QAAQ,CAACwD,GAAD,CAAR,GAAgB,SAAhB;AACD,OAFD,MAEK;AACHxD,QAAAA,QAAQ,CAACwD,GAAD,CAAR,GAAgB,MAAhB;AACD;AACF;;AACDzD,IAAAA,UAAU,CAACqD,EAAD,CAAV;AACAnD,IAAAA,WAAW,CAACD,QAAD,CAAX;AACD;;AACDjC,EAAAA,SAAS,CAAC,MAAM;AACdyC,IAAAA,KAAK,CAAC,aAAD,CAAL,CACDK,IADC,CACIC,QAAQ,IAAIA,QAAQ,CAACoC,IAAT,EADhB,EAEDrC,IAFC,CAEIG,IAAI,IAAIrB,WAAW,CAACqB,IAAD,CAFvB;AAGD,GAJQ,EAIN,EAJM,CAAT;AAKA,MAAI0C,QAAQ,GAAG,EAAf;;AACA,MAAIhE,QAAJ,EAAa;AACX,SAAK,MAAMI,OAAX,IAAsBJ,QAAtB,EAA+B;AAC3B,UAAIiE,IAAI,gBAAG;AAAK,QAAA,IAAI,EAAE7D,OAAO,CAAC8D,QAAnB;AAA6B,QAAA,OAAO,EAAEZ,UAAtC;AAAkD,QAAA,SAAS,EAAC,WAA5D;AAAA,kBAAyElD,OAAO,CAAC0B;AAAjF;AAAA;AAAA;AAAA;AAAA,cAAX;;AACAkC,MAAAA,QAAQ,CAACG,IAAT,CAAcF,IAAd;AACH;AACF;;AACD,sBACE;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,iBACGD,QADH,eAEE,QAAC,YAAD;AAAc,QAAA,YAAY,EAAEvC;AAA5B;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,OAAO,EAAEjB,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAME;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,OAAO,EAAEgB,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eASE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,YAAY,EAAC,cAAhC;AAA+C,QAAA,KAAK,EAAElC,YAAtD;AAAoE,QAAA,QAAQ,EAAE6D;AAA9E;AAAA;AAAA;AAAA;AAAA,cATF,eAUE,QAAC,MAAD;AACE,QAAA,QAAQ,EAAC,YADX;AAEE,QAAA,WAAW,EAAC,SAFd;AAGE,QAAA,KAAK,EAAE/D,OAHT;AAIE,QAAA,QAAQ,EAAEC;AAJZ;AAAA;AAAA;AAAA;AAAA,cAVF,eAgBE,QAAC,MAAD;AACE,QAAA,QAAQ,EAAC,YADX;AAEE,QAAA,WAAW,EAAC,gBAFd;AAGE,QAAA,KAAK,EAAEH,QAHT;AAIE,QAAA,QAAQ,EAAEC;AAJZ;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAwBI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,OAAO,EAAE6C,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,YAAD;AAAc,QAAA,cAAc,EAAEtC,cAA9B;AAA8C,QAAA,UAAU,EAAEE,UAA1D;AAAsE,QAAA,cAAc,EAAEmD,cAAtF;AAAsG,QAAA,QAAQ,EAAEzC;AAAhH;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBJ,eA8BI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE;AAAK,QAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA9BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqCC;;GA9KQrB,iB;;KAAAA,iB;AA+KT,eAAeA,iBAAf","sourcesContent":["import React, { useState, useEffect, setState } from 'react';\r\nimport Editor from './Editor'\r\nimport MenuRenderer from './MenuRenderer'\r\nimport Cookies from 'js-cookie';\r\nimport Configuration from './Helpers'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport TemplateList from './TemplateList';\r\n\r\nfunction TemplateGenerator() {\r\n\r\nconst [template, setTemplate] = useState('')\r\nconst [scripts, setScripts] = useState('')\r\nconst [templateName, setTemplateName] = useState('')\r\nconst [templateId, setTemplateId] = useState('')\r\nconst [parsedTemplate, setParsedTemplate] = useState('')\r\nconst [properties, setProperties] = useState('')\r\nconst [time, setTime] = useState('')\r\nconst [userData, setUserData] = useState('')\r\nconst [dataId, setDataId] = useState('')\r\nconst [dataset, setDataset] = useState('')\r\nconst [metaData, setMetaData] = useState('')\r\n\r\n\r\n\r\nfunction parseTemplate(){\r\n  var csrftoken = Cookies.get('csrftoken');\r\n  var body = JSON.stringify({'properties':properties,'script':template})\r\n  fetch('parse_options', {\r\n    method: 'POST',\r\n    credentials: 'include',\r\n    mode: 'same-origin',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'X-CSRFToken':csrftoken\r\n    },\r\n    body: body\r\n  }).then(response => response.text())\r\n  .then(data => setParsedTemplate(JSON.parse(data)))\r\n\r\n}\r\nfunction saveTemplate(){\r\n  var csrftoken = Cookies.get('csrftoken');\r\n  var body = JSON.stringify({\r\n    'scripts':scripts,\r\n    'template':template,\r\n    'templateName': templateName,\r\n    'templateId':templateId,\r\n  })\r\n  fetch('save_template', {\r\n    method: 'POST',\r\n    credentials: 'include',\r\n    mode: 'same-origin',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'X-CSRFToken':csrftoken\r\n    },\r\n    body: body\r\n  }).then(response => response.text())\r\n  .then(data => setTemplateId(data))\r\n\r\n}\r\nfunction loadTemplate(id){\r\n  fetch('get_template?templateid='+id)\r\n  .then(response => response.text())\r\n  .then(data => {\r\n    var templateData = JSON.parse(data)\r\n    setTemplate(templateData[0].fields.template)\r\n    setScripts(templateData[0].fields.scripts)\r\n    setTemplateId(templateData[0].fields.templateid)\r\n    setTemplateName(templateData[0].fields.name)\r\n    setParsedTemplate(templateData[0].parsed)\r\n  })\r\n}\r\nfunction runTemplate(){\r\n  var csrftoken = Cookies.get('csrftoken');\r\n  var body = JSON.stringify({'properties':properties,'script':template})\r\n  fetch('get_script',{\r\n    method: 'POST',\r\n    credentials: 'include',\r\n    mode: 'same-origin',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'X-CSRFToken':csrftoken\r\n    },\r\n    body:body\r\n  })\r\n  .then(response => response.text())\r\n  .then(txt => {\r\n    var scriptURLs = scripts.split(/\\r?\\n/);\r\n    for (var scriptURL of scriptURLs){\r\n      var script = document.createElement('script');\r\n      script.type = 'text/javascript';\r\n      script.async = true;\r\n      script.onload = function(){\r\n      };\r\n      script.src = scriptURL;\r\n      document.getElementsByTagName('head')[0].appendChild(script);\r\n    }\r\n    eval(txt)\r\n  })\r\n}\r\nfunction saveProperties(property, value){\r\n  var propertyCopy = properties\r\n  if (!propertyCopy){\r\n    propertyCopy={}\r\n  }\r\n  propertyCopy[property] = value;\r\n  setProperties(propertyCopy);\r\n\r\n}\r\nfunction saveTemplateName(e){\r\n  setTemplateName(e.target.value);\r\n}\r\nfunction getDataset(e){\r\n  fetch('getData?sourceid='+e.target.getAttribute(\"uuid\"))\r\n  .then(response => response.json())\r\n  .then(data => getMetaData(data))\r\n\r\n}\r\nfunction getMetaData(data){\r\n  var ds = JSON.parse(data)\r\n  var colNames = Object.keys(ds)\r\n  var metaData = {}\r\n  for (var col of colNames){\r\n    if (isNaN(ds[col][0])){\r\n      metaData[col] = 'NUMERIC'\r\n    }else{\r\n      metaData[col] = 'TEXT'\r\n    }\r\n  }\r\n  setDataset(ds)\r\n  setMetaData(metaData)\r\n}\r\nuseEffect(() => {\r\n  fetch('getUserData')\r\n.then(response => response.json())\r\n.then(data => setUserData(data))\r\n}, [])\r\nlet datasets = []\r\nif (userData){\r\n  for (const dataset of userData){\r\n      let dset = <div uuid={dataset.sourceid} onClick={getDataset} className=\"reportRow\">{dataset.name}</div>\r\n      datasets.push(dset)\r\n  }\r\n}\r\nreturn (\r\n  <div id=\"templater\">\r\n      <div className=\"templateContainer\"> \r\n        {datasets}\r\n        <TemplateList loadTemplate={loadTemplate}/>\r\n        <div className=\"parseButton\" onClick={parseTemplate}>\r\n          Parse Template\r\n        </div>\r\n        <div className=\"parseButton\" onClick={saveTemplate}>\r\n          Save Template\r\n        </div>\r\n        <input type=\"text\" defaultValue=\"New Template\" value={templateName} onChange={saveTemplateName}></input>\r\n        <Editor\r\n          language=\"javascript\"\r\n          displayName=\"Scripts\"\r\n          value={scripts}\r\n          onChange={setScripts}  \r\n        />\r\n        <Editor\r\n          language=\"javascript\"\r\n          displayName=\"Chart Template\"\r\n          value={template}\r\n          onChange={setTemplate}  \r\n        />-\r\n      </div>\r\n      <div className=\"optionsContainer\">\r\n        <div className=\"parseButton\" onClick={runTemplate}>\r\n          Run JS\r\n        </div>\r\n        <MenuRenderer parsedTemplate={parsedTemplate} properties={properties} saveProperties={saveProperties} metaData={metaData}/>      \r\n      </div>\r\n      <div className=\"renderContainer\">\r\n        <div id=\"container\" ></div>\r\n      </div>\r\n\r\n  </div>\r\n)\r\n}\r\nexport default TemplateGenerator;"]},"metadata":{},"sourceType":"module"}