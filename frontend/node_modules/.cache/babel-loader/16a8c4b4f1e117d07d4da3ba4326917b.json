{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\schro\\\\Documents\\\\TemplateReports\\\\YFIntegration\\\\frontend\\\\src\\\\MenuRenderer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, setState } from 'react';\nimport Select from 'react-select';\nimport Editor from './Editor';\nimport Configuration from './Helpers';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MenuRenderer(props) {\n  _s();\n\n  const {\n    parsedTemplate,\n    properties,\n    saveProperties,\n    metaData\n  } = props;\n  const [html, setHtml] = useState('');\n  const [menuOptions, setMenuOptions] = useState('');\n  console.log(properties, parsedTemplate);\n  var inputMenu = [];\n\n  for (var userInput of parsedTemplate) {\n    if (!userInput.name) continue;\n    inputMenu.push( /*#__PURE__*/_jsxDEV(Title, {\n      inputName: userInput.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 20\n    }, this));\n\n    if (userInput.type == 'String') {\n      inputMenu.push( /*#__PURE__*/_jsxDEV(TextInput, {\n        value: properties[userInput.name].value,\n        inputName: userInput.name,\n        type: userInput.type,\n        saveProperties: saveProperties\n      }, properties[userInput.name].value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 24\n      }, this));\n    }\n\n    if (userInput.type == 'CategoryColumn') {\n      const options = [];\n\n      for (var key of Object.keys(metaData)) {\n        if (metaData[key] == 'TEXT') {\n          options.push({\n            value: key,\n            label: key\n          });\n        }\n      }\n\n      inputMenu.push( /*#__PURE__*/_jsxDEV(SingleSelect, {\n        options: options,\n        inputName: userInput.name,\n        type: userInput.type,\n        saveProperties: saveProperties\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 24\n      }, this));\n    }\n\n    if (userInput.type == 'ValueColumn') {\n      const options = [];\n\n      for (var key of Object.keys(metaData)) {\n        if (metaData[key] == 'NUMERIC') {\n          options.push({\n            value: key,\n            label: key\n          });\n        }\n      }\n\n      inputMenu.push( /*#__PURE__*/_jsxDEV(SingleSelect, {\n        options: options,\n        inputName: userInput.name,\n        type: userInput.type,\n        saveProperties: saveProperties\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 24\n      }, this));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"inputMenu\",\n    children: inputMenu\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }, this);\n}\n\n_s(MenuRenderer, \"e6UZGWTDdh38kFwEMORTEGGHHvI=\");\n\n_c = MenuRenderer;\n\nfunction SingleSelect(props) {\n  const {\n    options,\n    inputName,\n    type,\n    saveProperties\n  } = props;\n\n  function handleChange(selectedOption) {\n    saveProperties(inputName, type, selectedOption.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Select, {\n    options: options,\n    onChange: handleChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = SingleSelect;\n\nfunction TextInput(props) {\n  const {\n    value,\n    inputName,\n    type,\n    saveProperties\n  } = props;\n\n  function handleChange(e) {\n    saveProperties(inputName, type, e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: value,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 7\n  }, this);\n}\n\n_c3 = TextInput;\n\nfunction Title(props) {\n  const {\n    inputName\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: inputName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_c4 = Title;\nexport default MenuRenderer;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"MenuRenderer\");\n$RefreshReg$(_c2, \"SingleSelect\");\n$RefreshReg$(_c3, \"TextInput\");\n$RefreshReg$(_c4, \"Title\");","map":{"version":3,"sources":["C:/Users/schro/Documents/TemplateReports/YFIntegration/frontend/src/MenuRenderer.js"],"names":["React","useState","useEffect","setState","Select","Editor","Configuration","FontAwesomeIcon","faTimes","faCheck","ToastContainer","toast","MenuRenderer","props","parsedTemplate","properties","saveProperties","metaData","html","setHtml","menuOptions","setMenuOptions","console","log","inputMenu","userInput","name","push","type","value","options","key","Object","keys","label","SingleSelect","inputName","handleChange","selectedOption","TextInput","e","target","Title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, setState } from 'react';\r\nimport Select from 'react-select'\r\nimport Editor from './Editor'\r\nimport Configuration from './Helpers'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction MenuRenderer(props) {\r\nconst {\r\n    parsedTemplate,\r\n    properties,\r\n    saveProperties,\r\n    metaData\r\n} = props\r\nconst [html, setHtml] = useState('')\r\nconst [menuOptions, setMenuOptions] = useState('')\r\n\r\nconsole.log(properties,parsedTemplate)\r\nvar inputMenu = []\r\nfor (var userInput of parsedTemplate){\r\n    if (!userInput.name) continue;\r\n    inputMenu.push(<Title inputName={userInput.name}/>)\r\n    if (userInput.type=='String'){\r\n        inputMenu.push(<TextInput value={properties[userInput.name].value} inputName={userInput.name} type={userInput.type} saveProperties={saveProperties} key={properties[userInput.name].value}/>)\r\n    }\r\n    if (userInput.type=='CategoryColumn'){\r\n        const options = []\r\n        for (var key of Object.keys(metaData)){\r\n            if (metaData[key]=='TEXT'){\r\n                options.push({value:key,label:key})\r\n            }\r\n        }\r\n        inputMenu.push(<SingleSelect options={options} inputName={userInput.name} type={userInput.type} saveProperties={saveProperties} />)\r\n    }\r\n    if (userInput.type=='ValueColumn'){\r\n        const options = []\r\n        for (var key of Object.keys(metaData)){\r\n            if (metaData[key]=='NUMERIC'){\r\n                options.push({value:key,label:key})\r\n            }\r\n        }\r\n        inputMenu.push(<SingleSelect options={options} inputName={userInput.name} type={userInput.type} saveProperties={saveProperties} />)\r\n\r\n    }\r\n}\r\nreturn (\r\n  <div id=\"inputMenu\">\r\n      {inputMenu}\r\n  </div>\r\n)\r\n}\r\n\r\nfunction SingleSelect(props){\r\n    const {\r\n        options,\r\n        inputName,\r\n        type,\r\n        saveProperties\r\n    } = props    \r\n    function handleChange(selectedOption) {\r\n        saveProperties(inputName, type, selectedOption.value)\r\n    }\r\n    return(\r\n        <Select options={options} onChange={handleChange} /> \r\n    )\r\n}\r\nfunction TextInput(props) {\r\n  const {\r\n      value,\r\n      inputName,\r\n      type,\r\n      saveProperties\r\n  } = props\r\n\r\n  function handleChange(e) {\r\n    saveProperties(inputName, type, e.target.value)\r\n  }\r\n  return (\r\n      <div>\r\n          <input type=\"text\" value={value} onChange={handleChange}></input>\r\n      </div>\r\n  )\r\n\r\n}\r\n\r\nfunction Title(props){\r\n    const {\r\n        inputName,\r\n    } = props\r\n    return (\r\n    <div>{inputName}</div>\r\n    )\r\n}\r\n\r\nexport default MenuRenderer;\r\n"]},"metadata":{},"sourceType":"module"}